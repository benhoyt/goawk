// Code generated by "stringer -type=Opcode"; DO NOT EDIT.

package compiler

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Nop-0]
	_ = x[Num-1]
	_ = x[Str-2]
	_ = x[Dupe-3]
	_ = x[Drop-4]
	_ = x[Field-5]
	_ = x[FieldNum-6]
	_ = x[Global-7]
	_ = x[Local-8]
	_ = x[Special-9]
	_ = x[ArrayGlobal-10]
	_ = x[ArrayLocal-11]
	_ = x[InGlobal-12]
	_ = x[InLocal-13]
	_ = x[AssignField-14]
	_ = x[AssignGlobal-15]
	_ = x[AssignLocal-16]
	_ = x[AssignSpecial-17]
	_ = x[AssignArrayGlobal-18]
	_ = x[AssignArrayLocal-19]
	_ = x[DeleteGlobal-20]
	_ = x[DeleteLocal-21]
	_ = x[DeleteAllGlobal-22]
	_ = x[DeleteAllLocal-23]
	_ = x[IncrField-24]
	_ = x[IncrGlobal-25]
	_ = x[IncrLocal-26]
	_ = x[IncrSpecial-27]
	_ = x[IncrArrayGlobal-28]
	_ = x[IncrArrayLocal-29]
	_ = x[AugAssignField-30]
	_ = x[AugAssignGlobal-31]
	_ = x[AugAssignLocal-32]
	_ = x[AugAssignSpecial-33]
	_ = x[AugAssignArrayGlobal-34]
	_ = x[AugAssignArrayLocal-35]
	_ = x[Regex-36]
	_ = x[MultiIndex-37]
	_ = x[Add-38]
	_ = x[Subtract-39]
	_ = x[Multiply-40]
	_ = x[Divide-41]
	_ = x[Power-42]
	_ = x[Modulo-43]
	_ = x[Equals-44]
	_ = x[NotEquals-45]
	_ = x[Less-46]
	_ = x[Greater-47]
	_ = x[LessOrEqual-48]
	_ = x[GreaterOrEqual-49]
	_ = x[Concat-50]
	_ = x[Match-51]
	_ = x[NotMatch-52]
	_ = x[Not-53]
	_ = x[UnaryMinus-54]
	_ = x[UnaryPlus-55]
	_ = x[Boolean-56]
	_ = x[Jump-57]
	_ = x[JumpFalse-58]
	_ = x[JumpTrue-59]
	_ = x[JumpNumEquals-60]
	_ = x[JumpNumNotEquals-61]
	_ = x[JumpNumLess-62]
	_ = x[JumpNumGreater-63]
	_ = x[JumpNumLessOrEqual-64]
	_ = x[JumpNumGreaterOrEqual-65]
	_ = x[JumpStrEquals-66]
	_ = x[JumpStrNotEquals-67]
	_ = x[Next-68]
	_ = x[Exit-69]
	_ = x[ForGlobalInGlobal-70]
	_ = x[ForGlobalInLocal-71]
	_ = x[ForLocalInGlobal-72]
	_ = x[ForLocalInLocal-73]
	_ = x[ForSpecialInGlobal-74]
	_ = x[ForSpecialInLocal-75]
	_ = x[BreakForIn-76]
	_ = x[CallAtan2-77]
	_ = x[CallClose-78]
	_ = x[CallCos-79]
	_ = x[CallExp-80]
	_ = x[CallFflush-81]
	_ = x[CallFflushAll-82]
	_ = x[CallGsub-83]
	_ = x[CallIndex-84]
	_ = x[CallInt-85]
	_ = x[CallLength-86]
	_ = x[CallLengthArg-87]
	_ = x[CallLog-88]
	_ = x[CallMatch-89]
	_ = x[CallRand-90]
	_ = x[CallSin-91]
	_ = x[CallSplitGlobal-92]
	_ = x[CallSplitLocal-93]
	_ = x[CallSplitSepGlobal-94]
	_ = x[CallSplitSepLocal-95]
	_ = x[CallSprintf-96]
	_ = x[CallSqrt-97]
	_ = x[CallSrand-98]
	_ = x[CallSrandSeed-99]
	_ = x[CallSub-100]
	_ = x[CallSubstr-101]
	_ = x[CallSubstrLength-102]
	_ = x[CallSystem-103]
	_ = x[CallTolower-104]
	_ = x[CallToupper-105]
	_ = x[CallUser-106]
	_ = x[CallNative-107]
	_ = x[Return-108]
	_ = x[ReturnNull-109]
	_ = x[Nulls-110]
	_ = x[Print-111]
	_ = x[Printf-112]
	_ = x[Getline-113]
	_ = x[GetlineField-114]
	_ = x[GetlineGlobal-115]
	_ = x[GetlineLocal-116]
	_ = x[GetlineSpecial-117]
	_ = x[GetlineArrayGlobal-118]
	_ = x[GetlineArrayLocal-119]
}

const _Opcode_name = "NopNumStrDupeDropFieldFieldNumGlobalLocalSpecialArrayGlobalArrayLocalInGlobalInLocalAssignFieldAssignGlobalAssignLocalAssignSpecialAssignArrayGlobalAssignArrayLocalDeleteGlobalDeleteLocalDeleteAllGlobalDeleteAllLocalIncrFieldIncrGlobalIncrLocalIncrSpecialIncrArrayGlobalIncrArrayLocalAugAssignFieldAugAssignGlobalAugAssignLocalAugAssignSpecialAugAssignArrayGlobalAugAssignArrayLocalRegexMultiIndexAddSubtractMultiplyDividePowerModuloEqualsNotEqualsLessGreaterLessOrEqualGreaterOrEqualConcatMatchNotMatchNotUnaryMinusUnaryPlusBooleanJumpJumpFalseJumpTrueJumpNumEqualsJumpNumNotEqualsJumpNumLessJumpNumGreaterJumpNumLessOrEqualJumpNumGreaterOrEqualJumpStrEqualsJumpStrNotEqualsNextExitForGlobalInGlobalForGlobalInLocalForLocalInGlobalForLocalInLocalForSpecialInGlobalForSpecialInLocalBreakForInCallAtan2CallCloseCallCosCallExpCallFflushCallFflushAllCallGsubCallIndexCallIntCallLengthCallLengthArgCallLogCallMatchCallRandCallSinCallSplitGlobalCallSplitLocalCallSplitSepGlobalCallSplitSepLocalCallSprintfCallSqrtCallSrandCallSrandSeedCallSubCallSubstrCallSubstrLengthCallSystemCallTolowerCallToupperCallUserCallNativeReturnReturnNullNullsPrintPrintfGetlineGetlineFieldGetlineGlobalGetlineLocalGetlineSpecialGetlineArrayGlobalGetlineArrayLocal"

var _Opcode_index = [...]uint16{0, 3, 6, 9, 13, 17, 22, 30, 36, 41, 48, 59, 69, 77, 84, 95, 107, 118, 131, 148, 164, 176, 187, 202, 216, 225, 235, 244, 255, 270, 284, 298, 313, 327, 343, 363, 382, 387, 397, 400, 408, 416, 422, 427, 433, 439, 448, 452, 459, 470, 484, 490, 495, 503, 506, 516, 525, 532, 536, 545, 553, 566, 582, 593, 607, 625, 646, 659, 675, 679, 683, 700, 716, 732, 747, 765, 782, 792, 801, 810, 817, 824, 834, 847, 855, 864, 871, 881, 894, 901, 910, 918, 925, 940, 954, 972, 989, 1000, 1008, 1017, 1030, 1037, 1047, 1063, 1073, 1084, 1095, 1103, 1113, 1119, 1129, 1134, 1139, 1145, 1152, 1164, 1177, 1189, 1203, 1221, 1238}

func (i Opcode) String() string {
	if i >= Opcode(len(_Opcode_index)-1) {
		return "Opcode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Opcode_name[_Opcode_index[i]:_Opcode_index[i+1]]
}
